<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Load Test" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="url" elementType="Argument">
            <stringProp name="Argument.name">url</stringProp>
            <stringProp name="Argument.value">https://cheery-melba-56d67c.netlify.app/#</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Landing Page" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">3</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">120</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First Access" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cheery-melba-56d67c.netlify.app</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
          <hashTree/>
          <ResultCollector guiclass="ComparisonVisualizer" testclass="ResultCollector" testname="Comparison Assertion Visualizer" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/-159" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">web.facebook.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:6789ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="dpr" elementType="Header">
                <stringProp name="Header.name">dpr</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="viewport-width" elementType="Header">
                <stringProp name="Header.name">viewport-width</stringProp>
                <stringProp name="Header.value">1920</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118.0.5993.89&quot;, &quot;Google Chrome&quot;;v=&quot;118.0.5993.89&quot;, &quot;Not=A?Brand&quot;;v=&quot;99.0.0.0&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-model" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                <stringProp name="Header.value">&quot;&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                <stringProp name="Header.value">&quot;10.0.0&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-prefers-color-scheme" elementType="Header">
                <stringProp name="Header.name">sec-ch-prefers-color-scheme</stringProp>
                <stringProp name="Header.value">light</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/windows/shell/actions-162" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;config&quot;:{&quot;device&quot;:{&quot;appControl&quot;:{&quot;level&quot;:&quot;anywhere&quot;},&quot;appReputation&quot;:{&quot;enforcedByPolicy&quot;:false,&quot;level&quot;:&quot;warn&quot;}},&quot;user&quot;:{&quot;uriReputation&quot;:{&quot;enforcedByPolicy&quot;:false,&quot;level&quot;:&quot;warn&quot;}}},&quot;identity&quot;:{&quot;caller&quot;:{&quot;locales&quot;:[&quot;en-US&quot;],&quot;process&quot;:{&quot;application&quot;:{&quot;$type&quot;:&quot;win32&quot;,&quot;path&quot;:&quot;C:\\Windows\\System32\\smartscreen.exe&quot;},&quot;creationTime&quot;:&quot;16978938322633468&quot;,&quot;id&quot;:13104}},&quot;client&quot;:{&quot;data&quot;:{&quot;offlineExperience&quot;:&quot;305788523905637792629615779130521165717&quot;,&quot;script&quot;:&quot;96032244749497702726114603847611723578.rel.v2&quot;},&quot;version&quot;:&quot;2814751014981106&quot;},&quot;device&quot;:{&quot;architecture&quot;:9,&quot;browser&quot;:{&quot;edge&quot;:&quot;Microsoft.MicrosoftEdge_44.19041.3570.0_neutral__8wekyb3d8bbwe&quot;,&quot;internetExplorer&quot;:&quot;9.11.19041.0&quot;},&quot;cloudSku&quot;:false,&quot;enterprise&quot;:null,&quot;family&quot;:3,&quot;locale&quot;:&quot;en-US&quot;,&quot;netJoinStatus&quot;:2,&quot;onlineIdTicket&quot;:&quot;t=GwAWAd9tBAAU4MijKW4GiCCLggU/9urvxKw9DJgOZgAAEFN7amiKj6mkGwo1AMeQ4wbgAGjg9bgBT9btkgJZ+QjiwTRtoaeXu8HrhF3hdi3WY5Ab9MeMst6tJbo4unpPIKomj0Iga0Jze15DjQwdToQiQG5EuFIAvA/zfndhkCyhf8zai2IBrTr33O3cJZfpDct6zAOFI9ieL5cDTAtKhw1Gh81+kMO1CD8vyxMNQlG/4kF1cLyQkXIQBoYYrHNLil7WsBvOWR+0vFnvF/Vwdtsj40oPAORQoBO8pZFN1VzwzaoiIDNdPfNDYCiZuCtHWd9p0Q/1l+AK6TrA0pxhfdSP3u5GsPqGZf+en10wkAvr16mGHgE=&amp;p=&quot;,&quot;osVersion&quot;:&quot;10.0.19045.3570.vb_release&quot;},&quot;user&quot;:{&quot;locale&quot;:&quot;en-US&quot;}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">checkappexec.microsoft.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/windows/shell/actions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:75475ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">SmartScreen/2814751014981106</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/oauth2/v4/token-164" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="client_id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_id</stringProp>
                <stringProp name="Argument.value">77185425430.apps.googleusercontent.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="client_secret" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client_secret</stringProp>
                <stringProp name="Argument.value">OTJgUOQcT7lO7GsGZq2G4IlT</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">refresh_token</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="refresh_token" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">refresh_token</stringProp>
                <stringProp name="Argument.value">1//0gwtLHiDEVwfxCgYIARAAGBASNwF-L9IrARWfwOW7eQKR9tviU36zs-551PV_eVtnEJ2VB2z9WH2P6yf_mN1BXs2mL89c7VcyKGU</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
                <stringProp name="Argument.value">https://www.googleapis.com/auth/chromesync</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">www.googleapis.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/oauth2/v4/token</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:12010ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/nw/-163" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">web.facebook.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/nw/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://web.facebook.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="dpr" elementType="Header">
                <stringProp name="Header.name">dpr</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="viewport-width" elementType="Header">
                <stringProp name="Header.name">viewport-width</stringProp>
                <stringProp name="Header.value">1920</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118.0.5993.89&quot;, &quot;Google Chrome&quot;;v=&quot;118.0.5993.89&quot;, &quot;Not=A?Brand&quot;;v=&quot;99.0.0.0&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-model" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                <stringProp name="Header.value">&quot;&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                <stringProp name="Header.value">&quot;10.0.0&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="sec-ch-prefers-color-scheme" elementType="Header">
                <stringProp name="Header.name">sec-ch-prefers-color-scheme</stringProp>
                <stringProp name="Header.value">light</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/chrome-sync/command/?client=Google+Chrome&amp;client_id=%2BTvw2N4XfQ7Vsip4DQd9gw%3D%3D-165" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�V}L&#x1b;e&#x18;��&#xd;
����q�X�i�%rĖ��;z�G�ĉQ�S&#x3;�� &#x5cf;�&#x12;Zj۬c��,&amp;#C�L6��قf�&#x19;��%~&#x38d;8��f�4:66��&#xb;&#x6;�G&#x10;aH2�&#x14;����1�^���{���y~Ͻ�e&#x5;�\�&#x1b;6&#x5;�&gt;&#x1f;&#x17;���&#x1a;&#x1f;�7�&#x1a;|�K�&#x16;���H�&#x8;&#xe;��AaK3J&#x1c;B�m&#x10;%ʱ&#x14;&#xc;u�p�[�&#x8;m�ˇ�fM&#xd;
�&#x13;7r�k/&#x1a;�&#xd;��k2��&#x16;ٲyn�ߔ&#x1e;ˀhz�@R�8�Gr��ˀ&#x1c;&#x2;&#x1f;&#x2;�&#xe;Ks�&#x6;&#x1b;|��P��U��&#x11;ɴ%��&#x13; �]�9�Ǎ\���� z&#x1e;�&#x1e;k���&#x18;@A��RȻ&#x1d;���&#x16;QV�fm���Z-���`M�ܱR,���&#x1b;�\���^&#x6;&#x1b;�t�aU]ʖ0�&#x6;�=&#x1e;&#x3;7G{&#x7f;���GT�)@!(H�&#x11;=0 ��&#x19;�#�&#x8;�.���Q�&#x3;�q&#x1d;&#x4;w�&#xd;
�&quot;&#x16;y���&quot;֢A�PC���9���+���i&#x14;QNX���$��&#x5;�ޛ(q&#x1e;&#x10;����De&#x3;&#x11;&#x1c;&#x11;�}P&#x1b;혉��9qÂ���&#x15;���E1M�ǖ_%f&#x13;f[�e &#x12;�5&quot;�|�.�&#x1e;7ȋ���q�B��*��&#x1a;��p&#x1;Y�o�RE`��,P�V���Td;ߧ���&gt;Y�9&#x15;���*f��%&#xb;3�&quot;ۮS�Jن&lt;�0W�b�&#x7;��~&#xd;qBb�&#xe;�v��6$&#x7;#&#x1c;&#x1f;�&#x0;&quot;&#x1;� sǭ�4W^�x&apos;���&#x1b;C��O�R�&#x7f;��&#x14;�T����&#x14;�;�l��~&#x15;�&#x1e;�]q5{��~�&quot;���Z�l��0߫�v&#x4;�7?�&#x12;�Hl�&#x7;�g�&#x19;���Xz����Bm�&#x7f;�&#x1b;�y�-�,&#x1c;&#x15;��&#x7;$&#x17;&#x7;m-b&#x18;;eg�bS%tV��*&#x1d;��&#x17;&#x14;&#xb;&#x10;&#x8;�b��X.&#x1d;��J�&#x6;�ea.���-\ݸ��&#xb;��u�&#x17;&#xd;
�6��l�7�R&#xd;&#xd;��JU�p�X�j�r&#x6;��I&#x7;�-&lt;;&#x1;�&#x0;�&#xd;
{������_��&#x11;��v�&#x2;x�+�c�,&#x1d;�&#x18;&#x19;&#x12;�&apos;F&#xf;��&#x5;:x�Ȱ0�66|&#xe;P:82-�͝&lt;r&#x19;8��4&apos;�J⣳�&#xe;�&#x0;O90&#x1d;�0%���F����3&#x1d;��&#x3;_��f��a���?�șz��������&#x18;��&#x8;�_�`&#x1f;�&#x7;�&#x1f;#��to�K�\~�4��NS&#x17;؀!Yq�����&#x0;�������&#x14;|���=	ĩ�3(�&#x380;����&#x17;&#x6;���&#x12;*�&#x18;yRW�86�&#xc;Wd��&#x18;#��F���v��&#x19;͔�vQ����ܶN&#x14;Ca���&#xd;
&#x7f;&#xc;K�&#xb;*	w��Y�/&#x7f;&#x12;�&#x13;�(�&#x13;}��ڳk����w�N��p�&#x17;���Q��%^�,Ik�,+7X,v��D���dg&#xd;�&#x16;��fh��)���.��X3��M���e�&#x18;�jf�A&#xf;&#x1f;*t&#x6;9���X��ܡBq��=y&#x16;��7�&#x6;W�PJ���P�s�{�Gkv{&#x3;�5��t&gt;��l7�\c�ְ��{���b+&#x1f;�o/�+�4��@Y�&#x6;J�^�,��ԡ8�&#x17;%&#x7;�x�&#x10;&#x0;&#x0;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clients4.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/chrome-sync/command/?client=Google+Chrome&amp;client_id=%2BTvw2N4XfQ7Vsip4DQd9gw%3D%3D</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Encoding" elementType="Header">
                <stringProp name="Header.name">Content-Encoding</stringProp>
                <stringProp name="Header.value">gzip</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ya29.a0AfB_byBJhn5c4OSA1tc5gkQJ5rPwYWKDP6WSoXLwFngXEIMTnn4YWs9qkiDNcCukFwlDE_ndvz64_2ou61RH00-YmFcmlJS1cFAD6Me2VAb5O99bun3Z6UaOxoEUDVt_MEy6B5A5uPLwjHI8DlUeepQCQ3LZjQDQrpWFnEXanx68fCKfQj0kz0_wUJJjKh88s4GiThx13tUC8Pz4lKb6u3QvZSgfn5qtm6zkadccOmds_vclL63UYfiWQNBjKav6gTNs_tqcctxyAhEaCgYKAXYSARASFQGOcNnC5V3MkR0ZNnlK6bXob9UJ_A0278</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCPOxzQEI3L3NAQiRys0BCLnKzQEI18zNAQjK0M0BCK3WzQEIqNjNAQji2s0BCLHbzQEI8dvNAQj5wNQVGPbJzQEYutLNAQ==</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Chrome WIN 118.0.5993.89 (1d05652f52a55dcf9a7905af94949f2bc3a66306-refs/branch-heads/5993@{#1298}) channel(stable)</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/complete/search-166" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="client" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">client</stringProp>
                <stringProp name="Argument.value">chrome-omni</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="gs_ri" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">gs_ri</stringProp>
                <stringProp name="Argument.value">chrome-ext-ansg</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="xssi" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">xssi</stringProp>
                <stringProp name="Argument.value">t</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="q" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">q</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="oit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">oit</stringProp>
                <stringProp name="Argument.value">0</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="gs_rn" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">gs_rn</stringProp>
                <stringProp name="Argument.value">42</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="sugkey" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">sugkey</stringProp>
                <stringProp name="Argument.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">www.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/complete/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCPOxzQEI3L3NAQiRys0BCLnKzQEI18zNAQjK0M0BCK3WzQEIqNjNAQji2s0BCLHbzQEI8dvNAQj5wNQVGPbJzQEYutLNAQ==</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/-167" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">navigate</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-User" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">max-age=0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">document</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/splash-screen.css-169" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/splash-screen.css</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">style</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/media/logos/LOGO_DEEPOCEAN-06.svg-170" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/media/logos/LOGO_DEEPOCEAN-06.svg</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-168" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:150536,&quot;request_elapsed_ms&quot;:30147,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://accounts.google.com/ListAccounts?gpsia=1&amp;source=ChromiumBrowser&amp;json=standard&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:104743,&quot;request_elapsed_ms&quot;:15231,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://accounts.google.com/RotateCookiesPage?og_pid=1&amp;rot=1&amp;origin=https%3A%2F%2Fwww.google.com&amp;exp_id=3701174&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:119526,&quot;request_elapsed_ms&quot;:47567,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://accounts.google.com/ListAccounts?gpsia=1&amp;source=ChromiumBrowser&amp;json=standard&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">accounts.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/static/css/main.31c66731.css-171" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/static/css/main.31c66731.css</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">text/css,*/*;q=0.1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">style</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/static/js/main.ae9f3719.js-172" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/static/js/main.ae9f3719.js</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">script</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/static/css/main.31c66731.css.map-173" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/static/css/main.31c66731.css.map</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/media/logos/favicon.ico-175" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/media/logos/favicon.ico</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/media/bg/invest_bg.jpg-174" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/media/bg/invest_bg.jpg</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/static/js/main.ae9f3719.js.map-176" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/static/js/main.ae9f3719.js.map</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:8446ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/log?hasfast=true&amp;auth=SAPISIDHASH%2042a281ba0969341c94dc2137891f74d6ed676b3a&amp;authuser=0&amp;format=json-177" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;en-GB&quot;,null,null,null,null,[3,1,0,0,0]]],509,[[&quot;1697893993105&quot;,null,[],null,null,null,null,&quot;[\&quot;570464805665\&quot;,null,\&quot;customEvent\&quot;,\&quot;customEvent\&quot;,[[\&quot;utmcsr\&quot;,\&quot;console.cloud.google.com\&quot;],[\&quot;utmdsid\&quot;,\&quot;Cj0KCQjww4-hBhCtARIsAC9gR3aLsHjKiLggYvgJPnWJfI9BlFb1EG_ECk9ngbORNm6skPSbe8NI7yUaArpjEALw_wcB\&quot;],[\&quot;utmccn\&quot;,\&quot;(referral)\&quot;],[\&quot;utmcmd\&quot;,\&quot;referral\&quot;],[\&quot;utmcct\&quot;,\&quot;/\&quot;]],0,null,\&quot;pantheon.pangular_20231017.07_p0\&quot;,null,null,\&quot;en\&quot;,\&quot;CLOUD_CONSOLE\&quot;,\&quot;/cloud-build/builds\&quot;,null,[],1,\&quot;console.cloud.google.com\&quot;,null,null,null,null,\&quot;9F6AB598-2E54-44A8-810E-FE6D3D83FDC9\&quot;,16,null,\&quot;6986096395575217\&quot;,null,1,null,null,null,null,null,[[1920,1080],24,[1920,931]],\&quot;75403135-E005-4E3A-AD1C-B054675D15E2\&quot;,null,null,null,null,null,null,null,\&quot;EFDC636F-91AC-41CE-B819-1F3F1D271887\&quot;,null,[],null,null,null,null,[],[],null,null,\&quot;705499208231\&quot;,null,null,null,null,null,null,null,null,null,[],[],null,null,null,null,null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,[[274,0,183,[],[2,4,\&quot;\&quot;,\&quot;\&quot;,0]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[0,1],{\&quot;108\&quot;:[null,null,[],null,null,null,\&quot;6986096395575217\&quot;,null,null,null,[[274,0,183,[],[2,4,\&quot;\&quot;,\&quot;\&quot;,0]]],[],null,[],[],null,null,null,[],[],null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[0,1]]}]&quot;,null,null,null,null,null,null,-25200,[null,[],null,&quot;[[],[],[48878333,48784841,1714257,48597130,48887078,48712757,48757199,48712713,48461633,48712725,48712737,48842381,48843380,1706538,48887048,48712088,48597128,48887064,48712173,48757195,48712099,48458018,48712141,48712153,48842374,48843410,48887022,13867220,71146545,71146541,71302183,71302179,71380064,71095327,71380068,71457902,71146515,71457906,71246861,71146511,71246857,71246852,71246849,71388286,71175294,71521282,71263358,71392259,71521286,13861014,71416838,71416842,1714257,71124082,71312399,71312403,71124078,71343124,71343128,13840523,71566372,71070815,71298238,71355585,71298234,71390404,71390408,71404748,71404752,71017640,71017635,71429349,71341286,71429353,71281814,71341290,71281810,71437558,71437562,71175298,71367932,71263362,13867118,71275774,71388290,13840385,71507093,71507097,70991066,71007455,13856821,71543973,71543976,70991061,13846562,71109838,71109833,71355581,71107901,71107896,13855170,13849032,71304556,71304560,71159054,71320949,71159050,71247110,71320953,71275778,71247106,71345534,71367936,71398657,71449859,71398661,71449863,71277938,71284082,71431436,71431440,71277934,71284078,71429392,71429396,71413021,71413025,71306533,71306536,71089494,71566645,71566649,13869393,71128504,71501259,71128500,71501263,13869388,71519716,71519720,71493108,71493112,71388669,71345538,71480710,13852949,71480714,71466383,71466387,71085547,71278051,71478703,71478707,71476661,71476665,71147068,71212607,71444035,71444039,71147064,71212603,71300651,71300647,71519836,71519840,71339623,71339627,71407213,71407217,1706538,71386743,71386747,71388673,71030395,70975096,71405061,13867670,13861526,71405065,13867674,70975091,71212659,71357969,71212655,13867649,13867654,71357973,71482912,71147097,71482916,71147093,71220810,71325236,71415351,71325240,71220806,71415355,71474883,71476931,13863513,71382744,71286436,71382748,71286432,71472872,71472876,13851235,71304954,71030400,13851152,71151350,71151346,71386769,71386773,71415450,71405213,71415454,71405217,71177943,71345836,71431852,71177939,71345840,71431856,13861418,71474879,71476927,71249724,71415618,71415622,71006012,71376726,71520090,71587679,71376730,71282467,71520094,71587675,71282463,71305058,13865968,13865972,71599982,71599978,71550834,71427954,71550838,71427958,71343991,71343995,71305085,71090037,13867934,13859712,71178090,71178086,71397154,71376676,71397158,71376680,71006017,71249728,71321536,71346120,13867866,71028656,71530440,71346124,13867871,71530444,71028651,71112620,71376851,71077800,71376855,71112615,71512028,13855603,71002010,71512032,71264155,71329766,71264151,71329770,71249809,71002005,71378926,71249805,71378930,71479286,71473143,71266182,71473147,71557113,71344124,71512063,71266178,71557117,71305089,71501728,71501732,71120849,71120845,71321532,13857582,71315523,71315527,71088180,13866202,71125041,71360592,71209007,71364689,71360596,71364693,71209003,13864179,13868273,71333997,71127053,71334001,71139337,71127049,71114762,71139333,71114757,13868268,71344128,71512067,13859984,13862032,13862036,71479315,71561234,71479319,71561238,13843588,71540767,13866125,13862028,71004260,71540771,71004255,71479341,71243855,71479345,71243851,71315512,13868200,71315516,71264445,71372994,71372998,71127213,71401698,13857915,13864056,71319796,71319799,71485685,71186566,71485689,71186562,71135462,71135458,13866035,71282909,71282904,13866040,71282900,71119052,71119048,71264449,13863981,71266623,71422275,71555413,71555417,71489893,71352690,71399794,71352694,71399798,71375229,71379200,71379204,71252341,71252337,71334173,71334178,13862327,71397669,71334182,71397673,71545135,71545139,71190863,71190859,71342389,71342393,71266627,71422271,71371212,71485901,71371216,71246252,71485905,71442903,71438804,71246248,71438808,71477730,71203222,71375337,71375341,71203218,71264648,71260549,71264644,71260545,71197057,71375233,70980091,71240180,70980086,71240176,71520665,71520669,13862156,71029208,71256538,71029213,71256534,71391670,13853994,71391674,13852383,71242289,13866689,71242285,71301676,71504470,71301672,71504474,71557726,71428702,71428705,71557730,13866748,13856482,71379570,71379574,70980108,71594623,70980103,71592454,71391747,71391751,13868692,71592451,71389704,13868703,71389708,13868679,71268963,13868687,71389725,71361053,71389729,71268959,71361057,13868735,13866684,71389747,71389751,71371322,71371326,71576263,71404228,71404232,71576267,71576276,71576272,71285404,71285400,71275155,71193230,71275151,71434992,71193226,71434996,71494393,71494397,13858322,71109372,71267067,71594627,71267063,71009008,71009003,71402139,71402143,71389860,71389864,71350953,71557801,71350957,71557805,71242442,13858342,71242438,71375544,71375548,13860819,71260988,13834196,71260984,71267113,71267109,71521113,71426908,71521117,71426911,71392100,71392104,71553898,71553902,71250706,71250702,71476087,71476091,13852650,71109377,71478024,71295854,71488275,71025514,71025519,71488279,71295850,71435038,71152480,71435042,71152476,71351077,71351081,71488299,71488303,71035722,71035717,71357378,13864784,71357382,71429069,13866845,71429073,71302059,71355348,71558102,71355352,71302055,71558106,13850442,71369691,71369695,13854540,71009176,71009181,71594988,71594991,71076749,71371764,71371768,71392255,71359361,71246845,71359365,71246842,71203832,13866772,71203828,71351181,71351185,71449495,71306136,71449499,71306140,71379880,71547818,71547822,71357371,71357375],[]]&quot;],null,null,null,[],1717,null,null,null,null,null,[]],[&quot;1697894005799&quot;,null,[],null,null,null,null,&quot;[\&quot;570464805665\&quot;,null,\&quot;Navigation\&quot;,\&quot;activeTab\&quot;,[[\&quot;hidden\&quot;,\&quot;false\&quot;],[\&quot;utmcsr\&quot;,\&quot;console.cloud.google.com\&quot;],[\&quot;utmdsid\&quot;,\&quot;Cj0KCQjww4-hBhCtARIsAC9gR3aLsHjKiLggYvgJPnWJfI9BlFb1EG_ECk9ngbORNm6skPSbe8NI7yUaArpjEALw_wcB\&quot;],[\&quot;utmccn\&quot;,\&quot;(referral)\&quot;],[\&quot;utmcmd\&quot;,\&quot;referral\&quot;],[\&quot;utmcct\&quot;,\&quot;/\&quot;]],0,null,\&quot;pantheon.pangular_20231017.07_p0\&quot;,null,null,\&quot;en\&quot;,\&quot;CLOUD_CONSOLE\&quot;,\&quot;/cloud-build/builds\&quot;,null,[],1,\&quot;console.cloud.google.com\&quot;,null,null,null,null,null,null,null,\&quot;6986096395575217\&quot;,null,0,null,null,null,null,null,[[1920,1080],24,[1920,931]],\&quot;75403135-E005-4E3A-AD1C-B054675D15E2\&quot;,null,null,null,null,null,null,null,\&quot;EFDC636F-91AC-41CE-B819-1F3F1D271887\&quot;,null,[],null,null,null,null,[],[],null,null,\&quot;705499208231\&quot;,null,null,null,null,null,null,null,null,null,[],[],null,null,null,null,null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[0,1],{\&quot;108\&quot;:[null,null,[],null,null,null,\&quot;6986096395575217\&quot;,null,null,null,[],[],null,[],[],null,null,null,[],[],null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[0,1]]}]&quot;,null,null,null,null,null,null,-25200,[null,[],null,&quot;[[],[],[48878333,48784841,1714257,48597130,48887078,48712757,48757199,48712713,48461633,48712725,48712737,48842381,48843380,1706538,48887048,48712088,48597128,48887064,48712173,48757195,48712099,48458018,48712141,48712153,48842374,48843410,48887022,13867220,71146545,71146541,71302183,71302179,71380064,71095327,71380068,71457902,71146515,71457906,71246861,71146511,71246857,71246852,71246849,71388286,71175294,71521282,71263358,71392259,71521286,13861014,71416838,71416842,1714257,71124082,71312399,71312403,71124078,71343124,71343128,13840523,71566372,71070815,71298238,71355585,71298234,71390404,71390408,71404748,71404752,71017640,71017635,71429349,71341286,71429353,71281814,71341290,71281810,71437558,71437562,71175298,71367932,71263362,13867118,71275774,71388290,13840385,71507093,71507097,70991066,71007455,13856821,71543973,71543976,70991061,13846562,71109838,71109833,71355581,71107901,71107896,13855170,13849032,71304556,71304560,71159054,71320949,71159050,71247110,71320953,71275778,71247106,71345534,71367936,71398657,71449859,71398661,71449863,71277938,71284082,71431436,71431440,71277934,71284078,71429392,71429396,71413021,71413025,71306533,71306536,71089494,71566645,71566649,13869393,71128504,71501259,71128500,71501263,13869388,71519716,71519720,71493108,71493112,71388669,71345538,71480710,13852949,71480714,71466383,71466387,71085547,71278051,71478703,71478707,71476661,71476665,71147068,71212607,71444035,71444039,71147064,71212603,71300651,71300647,71519836,71519840,71339623,71339627,71407213,71407217,1706538,71386743,71386747,71388673,71030395,70975096,71405061,13867670,13861526,71405065,13867674,70975091,71212659,71357969,71212655,13867649,13867654,71357973,71482912,71147097,71482916,71147093,71220810,71325236,71415351,71325240,71220806,71415355,71474883,71476931,13863513,71382744,71286436,71382748,71286432,71472872,71472876,13851235,71304954,71030400,13851152,71151350,71151346,71386769,71386773,71415450,71405213,71415454,71405217,71177943,71345836,71431852,71177939,71345840,71431856,13861418,71474879,71476927,71249724,71415618,71415622,71006012,71376726,71520090,71587679,71376730,71282467,71520094,71587675,71282463,71305058,13865968,13865972,71599982,71599978,71550834,71427954,71550838,71427958,71343991,71343995,71305085,71090037,13867934,13859712,71178090,71178086,71397154,71376676,71397158,71376680,71006017,71249728,71321536,71346120,13867866,71028656,71530440,71346124,13867871,71530444,71028651,71112620,71376851,71077800,71376855,71112615,71512028,13855603,71002010,71512032,71264155,71329766,71264151,71329770,71249809,71002005,71378926,71249805,71378930,71479286,71473143,71266182,71473147,71557113,71344124,71512063,71266178,71557117,71305089,71501728,71501732,71120849,71120845,71321532,13857582,71315523,71315527,71088180,13866202,71125041,71360592,71209007,71364689,71360596,71364693,71209003,13864179,13868273,71333997,71127053,71334001,71139337,71127049,71114762,71139333,71114757,13868268,71344128,71512067,13859984,13862032,13862036,71479315,71561234,71479319,71561238,13843588,71540767,13866125,13862028,71004260,71540771,71004255,71479341,71243855,71479345,71243851,71315512,13868200,71315516,71264445,71372994,71372998,71127213,71401698,13857915,13864056,71319796,71319799,71485685,71186566,71485689,71186562,71135462,71135458,13866035,71282909,71282904,13866040,71282900,71119052,71119048,71264449,13863981,71266623,71422275,71555413,71555417,71489893,71352690,71399794,71352694,71399798,71375229,71379200,71379204,71252341,71252337,71334173,71334178,13862327,71397669,71334182,71397673,71545135,71545139,71190863,71190859,71342389,71342393,71266627,71422271,71371212,71485901,71371216,71246252,71485905,71442903,71438804,71246248,71438808,71477730,71203222,71375337,71375341,71203218,71264648,71260549,71264644,71260545,71197057,71375233,70980091,71240180,70980086,71240176,71520665,71520669,13862156,71029208,71256538,71029213,71256534,71391670,13853994,71391674,13852383,71242289,13866689,71242285,71301676,71504470,71301672,71504474,71557726,71428702,71428705,71557730,13866748,13856482,71379570,71379574,70980108,71594623,70980103,71592454,71391747,71391751,13868692,71592451,71389704,13868703,71389708,13868679,71268963,13868687,71389725,71361053,71389729,71268959,71361057,13868735,13866684,71389747,71389751,71371322,71371326,71576263,71404228,71404232,71576267,71576276,71576272,71285404,71285400,71275155,71193230,71275151,71434992,71193226,71434996,71494393,71494397,13858322,71109372,71267067,71594627,71267063,71009008,71009003,71402139,71402143,71389860,71389864,71350953,71557801,71350957,71557805,71242442,13858342,71242438,71375544,71375548,13860819,71260988,13834196,71260984,71267113,71267109,71521113,71426908,71521117,71426911,71392100,71392104,71553898,71553902,71250706,71250702,71476087,71476091,13852650,71109377,71478024,71295854,71488275,71025514,71025519,71488279,71295850,71435038,71152480,71435042,71152476,71351077,71351081,71488299,71488303,71035722,71035717,71357378,13864784,71357382,71429069,13866845,71429073,71302059,71355348,71558102,71355352,71302055,71558106,13850442,71369691,71369695,13854540,71009176,71009181,71594988,71594991,71076749,71371764,71371768,71392255,71359361,71246845,71359365,71246842,71203832,13866772,71203828,71351181,71351185,71449495,71306136,71449499,71306140,71379880,71547818,71547822,71357371,71357375],[]]&quot;],null,null,null,[],1718,null,null,null,null,null,[]],[&quot;1697894006483&quot;,null,[],null,null,null,null,&quot;[\&quot;570464805665\&quot;,null,\&quot;Navigation\&quot;,\&quot;activeTab\&quot;,[[\&quot;hidden\&quot;,\&quot;true\&quot;],[\&quot;utmcsr\&quot;,\&quot;console.cloud.google.com\&quot;],[\&quot;utmdsid\&quot;,\&quot;Cj0KCQjww4-hBhCtARIsAC9gR3aLsHjKiLggYvgJPnWJfI9BlFb1EG_ECk9ngbORNm6skPSbe8NI7yUaArpjEALw_wcB\&quot;],[\&quot;utmccn\&quot;,\&quot;(referral)\&quot;],[\&quot;utmcmd\&quot;,\&quot;referral\&quot;],[\&quot;utmcct\&quot;,\&quot;/\&quot;]],0,null,\&quot;pantheon.pangular_20231017.07_p0\&quot;,null,null,\&quot;en\&quot;,\&quot;CLOUD_CONSOLE\&quot;,\&quot;/cloud-build/builds\&quot;,null,[],1,\&quot;console.cloud.google.com\&quot;,null,null,null,null,null,null,null,\&quot;6986096395575217\&quot;,null,1,null,null,null,null,null,[[1920,1080],24,[1920,931]],\&quot;75403135-E005-4E3A-AD1C-B054675D15E2\&quot;,null,null,null,null,null,null,null,\&quot;EFDC636F-91AC-41CE-B819-1F3F1D271887\&quot;,null,[],null,null,null,null,[],[],null,null,\&quot;705499208231\&quot;,null,null,null,null,null,null,null,null,null,[],[],null,null,null,null,null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[0,1],{\&quot;108\&quot;:[null,null,[],null,null,null,\&quot;6986096395575217\&quot;,null,null,null,[],[],null,[],[],null,null,null,[],[],null,null,[],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[0,1]]}]&quot;,null,null,null,null,null,null,-25200,[null,[],null,&quot;[[],[],[48878333,48784841,1714257,48597130,48887078,48712757,48757199,48712713,48461633,48712725,48712737,48842381,48843380,1706538,48887048,48712088,48597128,48887064,48712173,48757195,48712099,48458018,48712141,48712153,48842374,48843410,48887022,13867220,71146545,71146541,71302183,71302179,71380064,71095327,71380068,71457902,71146515,71457906,71246861,71146511,71246857,71246852,71246849,71388286,71175294,71521282,71263358,71392259,71521286,13861014,71416838,71416842,1714257,71124082,71312399,71312403,71124078,71343124,71343128,13840523,71566372,71070815,71298238,71355585,71298234,71390404,71390408,71404748,71404752,71017640,71017635,71429349,71341286,71429353,71281814,71341290,71281810,71437558,71437562,71175298,71367932,71263362,13867118,71275774,71388290,13840385,71507093,71507097,70991066,71007455,13856821,71543973,71543976,70991061,13846562,71109838,71109833,71355581,71107901,71107896,13855170,13849032,71304556,71304560,71159054,71320949,71159050,71247110,71320953,71275778,71247106,71345534,71367936,71398657,71449859,71398661,71449863,71277938,71284082,71431436,71431440,71277934,71284078,71429392,71429396,71413021,71413025,71306533,71306536,71089494,71566645,71566649,13869393,71128504,71501259,71128500,71501263,13869388,71519716,71519720,71493108,71493112,71388669,71345538,71480710,13852949,71480714,71466383,71466387,71085547,71278051,71478703,71478707,71476661,71476665,71147068,71212607,71444035,71444039,71147064,71212603,71300651,71300647,71519836,71519840,71339623,71339627,71407213,71407217,1706538,71386743,71386747,71388673,71030395,70975096,71405061,13867670,13861526,71405065,13867674,70975091,71212659,71357969,71212655,13867649,13867654,71357973,71482912,71147097,71482916,71147093,71220810,71325236,71415351,71325240,71220806,71415355,71474883,71476931,13863513,71382744,71286436,71382748,71286432,71472872,71472876,13851235,71304954,71030400,13851152,71151350,71151346,71386769,71386773,71415450,71405213,71415454,71405217,71177943,71345836,71431852,71177939,71345840,71431856,13861418,71474879,71476927,71249724,71415618,71415622,71006012,71376726,71520090,71587679,71376730,71282467,71520094,71587675,71282463,71305058,13865968,13865972,71599982,71599978,71550834,71427954,71550838,71427958,71343991,71343995,71305085,71090037,13867934,13859712,71178090,71178086,71397154,71376676,71397158,71376680,71006017,71249728,71321536,71346120,13867866,71028656,71530440,71346124,13867871,71530444,71028651,71112620,71376851,71077800,71376855,71112615,71512028,13855603,71002010,71512032,71264155,71329766,71264151,71329770,71249809,71002005,71378926,71249805,71378930,71479286,71473143,71266182,71473147,71557113,71344124,71512063,71266178,71557117,71305089,71501728,71501732,71120849,71120845,71321532,13857582,71315523,71315527,71088180,13866202,71125041,71360592,71209007,71364689,71360596,71364693,71209003,13864179,13868273,71333997,71127053,71334001,71139337,71127049,71114762,71139333,71114757,13868268,71344128,71512067,13859984,13862032,13862036,71479315,71561234,71479319,71561238,13843588,71540767,13866125,13862028,71004260,71540771,71004255,71479341,71243855,71479345,71243851,71315512,13868200,71315516,71264445,71372994,71372998,71127213,71401698,13857915,13864056,71319796,71319799,71485685,71186566,71485689,71186562,71135462,71135458,13866035,71282909,71282904,13866040,71282900,71119052,71119048,71264449,13863981,71266623,71422275,71555413,71555417,71489893,71352690,71399794,71352694,71399798,71375229,71379200,71379204,71252341,71252337,71334173,71334178,13862327,71397669,71334182,71397673,71545135,71545139,71190863,71190859,71342389,71342393,71266627,71422271,71371212,71485901,71371216,71246252,71485905,71442903,71438804,71246248,71438808,71477730,71203222,71375337,71375341,71203218,71264648,71260549,71264644,71260545,71197057,71375233,70980091,71240180,70980086,71240176,71520665,71520669,13862156,71029208,71256538,71029213,71256534,71391670,13853994,71391674,13852383,71242289,13866689,71242285,71301676,71504470,71301672,71504474,71557726,71428702,71428705,71557730,13866748,13856482,71379570,71379574,70980108,71594623,70980103,71592454,71391747,71391751,13868692,71592451,71389704,13868703,71389708,13868679,71268963,13868687,71389725,71361053,71389729,71268959,71361057,13868735,13866684,71389747,71389751,71371322,71371326,71576263,71404228,71404232,71576267,71576276,71576272,71285404,71285400,71275155,71193230,71275151,71434992,71193226,71434996,71494393,71494397,13858322,71109372,71267067,71594627,71267063,71009008,71009003,71402139,71402143,71389860,71389864,71350953,71557801,71350957,71557805,71242442,13858342,71242438,71375544,71375548,13860819,71260988,13834196,71260984,71267113,71267109,71521113,71426908,71521117,71426911,71392100,71392104,71553898,71553902,71250706,71250702,71476087,71476091,13852650,71109377,71478024,71295854,71488275,71025514,71025519,71488279,71295850,71435038,71152480,71435042,71152476,71351077,71351081,71488299,71488303,71035722,71035717,71357378,13864784,71357382,71429069,13866845,71429073,71302059,71355348,71558102,71355352,71302055,71558106,13850442,71369691,71369695,13854540,71009176,71009181,71594988,71594991,71076749,71371764,71371768,71392255,71359361,71246845,71359365,71246842,71203832,13866772,71203828,71351181,71351185,71449495,71306136,71449499,71306140,71379880,71547818,71547822,71357371,71357375],[]]&quot;],null,null,null,[],1719,null,null,null,null,null,[]]],&quot;1697894006489&quot;,[]]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cloud.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/log?hasfast=true&amp;auth=SAPISIDHASH%2042a281ba0969341c94dc2137891f74d6ed676b3a&amp;authuser=0&amp;format=json</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:9276ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://console.cloud.google.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-site</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://console.cloud.google.com</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118.0.5993.89&quot;, &quot;Google Chrome&quot;;v=&quot;118.0.5993.89&quot;, &quot;Not=A?Brand&quot;;v=&quot;99.0.0.0&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCPOxzQEI3L3NAQiRys0BCLnKzQEI18zNAQjK0M0BCK3WzQEIqNjNAQji2s0BCLHbzQEI8dvNAQj5wNQVGPbJzQEYutLNAQ==</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                <stringProp name="Header.value">&quot;10.0.0&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-full-version" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-full-version</stringProp>
                <stringProp name="Header.value">&quot;118.0.5993.89&quot;</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-arch" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                <stringProp name="Header.value">&quot;x86&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-bitness" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                <stringProp name="Header.value">&quot;64&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-model" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                <stringProp name="Header.value">&quot;&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-wow64" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-178" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;QUIC&quot;,&quot;request_age_ms&quot;:360535,&quot;request_elapsed_ms&quot;:217,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://google.com/&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_CERT_AUTHORITY_INVALID&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:204841,&quot;request_elapsed_ms&quot;:9,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;ssl.cert.authority_invalid&quot;,&quot;url&quot;:&quot;https://play.google.com/&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_CERT_AUTHORITY_INVALID&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:184860,&quot;request_elapsed_ms&quot;:9,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;ssl.cert.authority_invalid&quot;,&quot;url&quot;:&quot;https://play.google.com/&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_CERT_AUTHORITY_INVALID&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:140850,&quot;request_elapsed_ms&quot;:23,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;ssl.cert.authority_invalid&quot;,&quot;url&quot;:&quot;https://play.google.com/&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_CERT_AUTHORITY_INVALID&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:442,&quot;request_elapsed_ms&quot;:18,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;ssl.cert.authority_invalid&quot;,&quot;url&quot;:&quot;https://play.google.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/en-US/livetile/preinstall-179" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="region" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">region</stringProp>
                <stringProp name="Argument.value">TH</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="appid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">appid</stringProp>
                <stringProp name="Argument.value">C98EA5B0842DBB9405BBF071E1DA76512D21FE36</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="FORM" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">FORM</stringProp>
                <stringProp name="Argument.value">Threshold</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">tile-service.weather.microsoft.com</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/en-US/livetile/preinstall</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Microsoft-WNS/10.0</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-180" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:130315,&quot;request_elapsed_ms&quot;:5290,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://googleads.g.doubleclick.net/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-181" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;SPDY&quot;,&quot;request_age_ms&quot;:155766,&quot;request_elapsed_ms&quot;:30014,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://www.googletagmanager.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/cable-182" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cablecar.services.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/cable</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                <stringProp name="Header.value">actioncable-v1-json, actioncable-unsupported, access-control-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpdiI6Ijg1Njg3NzVjY2FiMmVlMDdkM2M2ZTdmZDQxZGVhYWI1IiwiY29udGVudCI6ImFlYTdhY2M2M2EwMzVmYjAyMzc5MGQ1M2E0MDJjMTZjYzJhYzhhOGU0MTg5MjEwODRlYjY4ODEwMTRmZTlhZjk1YTRkOTkyZGVmNTlmM2MzODRjYmI5ZjJkNTQ2N2VmMDljMDQzOGIyNjZkM2ZiIiwiaWF0IjoxNjk3ODkzODY1LCJleHAiOjE2OTc4OTM4OTV9.2Bk7C-Ix0u39XPpbWxo3YKxK6m-7InGTJkdfoiYPDQU</stringProp>
              </elementProp>
              <elementProp name="Upgrade" elementType="Header">
                <stringProp name="Header.name">Upgrade</stringProp>
                <stringProp name="Header.value">websocket</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://app.netlify.com</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Version" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                <stringProp name="Header.value">13</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Key" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                <stringProp name="Header.value">QbmHh8IobIEUUVVN/eGkgQ==</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/portfolios?name=EXNESS-183" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">portfolio-sim-api-gateway-06-7a2g0l5t.an.gateway.dev</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/portfolios?name=EXNESS</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:6978ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">content-type,x-api-key</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/portfolios?name=EXNESS-184" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">portfolio-sim-api-gateway-06-7a2g0l5t.an.gateway.dev</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/portfolios?name=EXNESS</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">GET</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">content-type,x-api-key</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/portfolios-185" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">name</stringProp>
                <stringProp name="Argument.value">EXNESS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">portfolio-sim-api-gateway-06-7a2g0l5t.an.gateway.dev</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/portfolios</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="x-api-key" elementType="Header">
                <stringProp name="Header.name">x-api-key</stringProp>
                <stringProp name="Header.value">AIzaSyCBHaJOMq-lDRYBnbvB4IoW3n8mE33HtlE</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/media/logos/favicon.ico-186" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/media/logos/favicon.ico</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Call portfolio api" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">name</stringProp>
                <stringProp name="Argument.value">EXNESS</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">portfolio-sim-api-gateway-06-7a2g0l5t.an.gateway.dev</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/portfolios</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="x-api-key" elementType="Header">
                <stringProp name="Header.name">x-api-key</stringProp>
                <stringProp name="Header.value">AIzaSyCBHaJOMq-lDRYBnbvB4IoW3n8mE33HtlE</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/log?format=json&amp;hasfast=true&amp;authuser=0-190" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://www.youtube.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://www.youtube.com</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,x-goog-authuser</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/media/icons/duotune/arrows/arr061.svg-188" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/media/icons/duotune/arrows/arr061.svg</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/media/logos/LOGO_DEEPOCEAN-02_125x125.png-189" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/media/logos/LOGO_DEEPOCEAN-02_125x125.png</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">image</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">https://play.google.com/</stringProp>
              <stringProp name="Authorization.username">${AUTH_LOGIN}</stringProp>
              <stringProp name="Authorization.password">${AUTH_PASSWORD}</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
              <stringProp name="Authorization.mechanism">KERBEROS</stringProp>
            </elementProp>
          </collectionProp>
          <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
        </AuthManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/log?format=json&amp;hasfast=true&amp;authuser=0-191" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;en&quot;,null,&quot;17&quot;,null,null,[1,0,3,0,0]]],1654,[[&quot;1697893908094&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/po/w/cec\&quot;,null,[\&quot;ec\&quot;,\&quot;rk\&quot;],[[[[null,11],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[1]]],null,[]],[\&quot;/client_streamz/po/w/el\&quot;,null,[\&quot;en\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0.19999992847442627]],[[[\&quot;q\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0.5]],[[[\&quot;S\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,2]]],null,[]],[\&quot;/client_streamz/po/w/rl\&quot;,null,[\&quot;mn\&quot;,\&quot;ac\&quot;,\&quot;sc\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[null,1],[null,2],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,30010.700000047684]]],null,[]],[\&quot;/client_streamz/po/w/csc\&quot;,null,[\&quot;cs\&quot;,\&quot;rk\&quot;],[[[[null,3],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[1]]],null,[]]]]&quot;,null,null,null,null,null,null,-25200,[null,[],null,&quot;[[],[],[],[]]&quot;],null,null,null,[],1,null,null,null,null,null,[]],[&quot;1697893942081&quot;,null,[],null,null,null,null,&quot;[[[\&quot;/client_streamz/po/w/cec\&quot;,null,[\&quot;ec\&quot;,\&quot;rk\&quot;],[[[[null,11],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[1]],[[[null,14],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[1]]],null,[]],[\&quot;/client_streamz/po/w/el\&quot;,null,[\&quot;en\&quot;,\&quot;rk\&quot;],[[[[\&quot;r\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,35153.800000071526]],[[[\&quot;y\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,0.5]],[[[\&quot;e\&quot;],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,2.8000000715255737]]],null,[]],[\&quot;/client_streamz/po/w/rl\&quot;,null,[\&quot;mn\&quot;,\&quot;ac\&quot;,\&quot;sc\&quot;,\&quot;rk\&quot;],[[[[\&quot;c\&quot;],[null,2],[null,2],[\&quot;O43z0dpjhgX20SCx4KAo\&quot;]],[null,2351.7999999523163]]],null,[]]]]&quot;,null,null,null,null,null,null,-25200,[null,[],null,&quot;[[],[],[],[]]&quot;],null,null,null,[],2,null,null,null,null,null,[]]],&quot;1697894018078&quot;,[]]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">play.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/log?format=json&amp;hasfast=true&amp;authuser=0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://www.youtube.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://www.youtube.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="X-Goog-AuthUser" elementType="Header">
                <stringProp name="Header.name">X-Goog-AuthUser</stringProp>
                <stringProp name="Header.value">0</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCPOxzQEI3L3NAQiRys0BCLnKzQEI18zNAQjK0M0BCK3WzQEIqNjNAQji2s0BCLHbzQEI8dvNAQj5wNQVGPbJzQEYutLNAQ==</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/cable-192" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cablecar.services.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/cable</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                <stringProp name="Header.value">actioncable-v1-json, actioncable-unsupported, access-control-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpdiI6Ijg1Njg3NzVjY2FiMmVlMDdkM2M2ZTdmZDQxZGVhYWI1IiwiY29udGVudCI6ImFlYTdhY2M2M2EwMzVmYjAyMzc5MGQ1M2E0MDJjMTZjYzJhYzhhOGU0MTg5MjEwODRlYjY4ODEwMTRmZTlhZjk1YTRkOTkyZGVmNTlmM2MzODRjYmI5ZjJkNTQ2N2VmMDljMDQzOGIyNjZkM2ZiIiwiaWF0IjoxNjk3ODkzODY1LCJleHAiOjE2OTc4OTM4OTV9.2Bk7C-Ix0u39XPpbWxo3YKxK6m-7InGTJkdfoiYPDQU</stringProp>
              </elementProp>
              <elementProp name="Upgrade" elementType="Header">
                <stringProp name="Header.name">Upgrade</stringProp>
                <stringProp name="Header.value">websocket</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://app.netlify.com</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Version" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                <stringProp name="Header.value">13</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Key" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                <stringProp name="Header.value">t8LYMjC9qirZu/5FSEAcAg==</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/ListAccounts?gpsia=1&amp;source=ChromiumBrowser&amp;json=standard-193" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"> </stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">accounts.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/ListAccounts?gpsia=1&amp;source=ChromiumBrowser&amp;json=standard</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://www.google.com</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/chrome-sync/command/?client=Google+Chrome&amp;client_id=%2BTvw2N4XfQ7Vsip4DQd9gw%3D%3D-194" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�X}L&#x1b;e&#x18;��&#xd;
����qY��L&#xb;,�#������?2�&#x18;e�&#x1a;��&#x7;^?&#xe;Jh�m��M����&#xc;�2�\L�&#x16;4&#xb;�h�.�sn�ɇ������ئ.&#x18;�&#x1f;A�!ɼ�R&#x4;z��c�5wy��������{�&apos;�2&#x3;A.�&#xd;�&#x2;^��&#xb;qA&#x7f;Q���֙\�&gt;ܥG�&#x7f;�@$A&#x4;&#x7;z@u���	%&#xe;�D9D�R,&#x5;C�&gt;&#x1c;��LB&#x1b;��A�I��dǅ���K�Y�(⚌��E�n�Y�7���A4��/)W��ld�2 ��&#x7;&#x0;���\5�z��*��wU9}D2m�v�&#x4;��7bF�q!Ǧ��?��&#x7;�F&#x1a;�v2&#x6;��%�&#x14;�n&#x7;ka�����Y&#x1b;c��V&#xb;c!/Z�%sl&#xb;������\�[�Z&#x4;&#x1b;�t�nU^Β0�&#x2;�9&#x1a;&#x3;7G�&#x7f;���GT�	@!�O�&#x11;=0 y�&#x19;�#E&#x8;�&#xe;��&apos;P�&#x1d;�~&#x1d;&#x4;�`&#x5;x&#x11;�&lt;��B&#x11;k^ &#x7f;�&amp;�D�&#x1c;���գ��i&#x14;QNX����$��&#x5;��[(q&#x1;&#x10;[��n&#x12;3&#x1b;�����������h�&#x1d;&#x17;,HZ	]v&apos;&#x19;�O�����˒وٖ�2&#x10;��&#x1a;&#x11;H�Z&#x1b;�I�&#xb;�%�ZI�G.�5+��&#x1a;�Y�&#x2;�Xߨ�&#x15;���@1[�&#x1a;&#x1a;P��l��&#xf;�dafTd;=���g�,̠�l;N&apos;+e&#x1b;���\S�m&#xf;�}�5�I���&#x0;۱2ې&#x1c;�p|p}�&#x4;���&#x1d;���\}飝�_��&#xf;�&#x17;G|���[~�8�b}�u�(�)d#N������#��[&#x15;َ&#x1f;�*e떇�^-�C&#x0;���Xb�&#x1e;�&lt;K�`�7��+w&#x6;�&#x14;hý&#xb;�\�ԓ�����O��L&#x1c;���a씝1�M��Y���thߘS��@P&#x16;kX�rio�P�6X&apos;&#xb;sE��o���%�_(|�&#x1b;�P8�чe&#x1b;�1�jh��T��&#x8;&apos;�5�VV�&#x2;�6� :����&#x3;`��{�BW&#xd;
����&#x1c;�&#xe;��/�&#x1f;}y|D���cC&#x3;�~l�`3���ǎ&#xc;&#xd;
��#��&#x1;��C��n�ԑ+�!�$�4*���]&gt;|&#x13;&lt;��t�℈3���&#x1a;B&#x7;϶���&#x7;�|&#x5;�L��һ�_�_�=�XSo�k�o�1��&#x1e;d,x�&#xf;�&#x3;m�&#x10;ub���&#x12;&amp;�_6L=���&#x1;6`Hf����&#x13;7AN*ljn}+&#x5;�?sfOB&#x18;sa�&#x14;J�1 �`��ѹ�h���(B&#x1e;ו!��4�&#x15;Z�6�Ȼ��f�y��vsF3e�]&#x14;�4W�&#x15;��0Y��&#x8d;aIz!K�Shv&#x16;��gbr�&#x12;9��nk��]�͕�\�;�S��4B&apos;&#x6;�\���y��&#x1e;�@/�&#x13;ۣ&#x0;�K��Y*&#x6;CEI��b���&amp;�e�&amp;;kȳ��4CS&lt;Mq4�v�,WȚi�gm&#x8f;��.+�0V3c&#xc;z�P�3��]5�&#x1a;&#xf;�&#xe;&#x15;�k&#x14;�ɵP���4�j�����&#x9c;��C&gt;\��&#x1b;ȫ�=��M%��g&#x1a;����6�SFf&#x17;[�&#x7f;{Im��a�s�e[�����H-��&#x7f;&#x1;�KN�)&#x11;&#x0;&#x0;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clients4.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/chrome-sync/command/?client=Google+Chrome&amp;client_id=%2BTvw2N4XfQ7Vsip4DQd9gw%3D%3D</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Encoding" elementType="Header">
                <stringProp name="Header.name">Content-Encoding</stringProp>
                <stringProp name="Header.value">gzip</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ya29.a0AfB_byBJhn5c4OSA1tc5gkQJ5rPwYWKDP6WSoXLwFngXEIMTnn4YWs9qkiDNcCukFwlDE_ndvz64_2ou61RH00-YmFcmlJS1cFAD6Me2VAb5O99bun3Z6UaOxoEUDVt_MEy6B5A5uPLwjHI8DlUeepQCQ3LZjQDQrpWFnEXanx68fCKfQj0kz0_wUJJjKh88s4GiThx13tUC8Pz4lKb6u3QvZSgfn5qtm6zkadccOmds_vclL63UYfiWQNBjKav6gTNs_tqcctxyAhEaCgYKAXYSARASFQGOcNnC5V3MkR0ZNnlK6bXob9UJ_A0278</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCPOxzQEI3L3NAQiRys0BCLnKzQEI18zNAQjK0M0BCK3WzQEIqNjNAQji2s0BCLHbzQEI8dvNAQj5wNQVGPbJzQEYutLNAQ==</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Chrome WIN 118.0.5993.89 (1d05652f52a55dcf9a7905af94949f2bc3a66306-refs/branch-heads/5993@{#1298}) channel(stable)</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-195" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:62648,&quot;request_elapsed_ms&quot;:1501,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://www.google.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/service/update2/crx-196" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="os" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">os</stringProp>
                <stringProp name="Argument.value">win</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="arch" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">arch</stringProp>
                <stringProp name="Argument.value">x64</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="os_arch" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">os_arch</stringProp>
                <stringProp name="Argument.value">x86_64</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="nacl_arch" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">nacl_arch</stringProp>
                <stringProp name="Argument.value">x86-64</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prod" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">prod</stringProp>
                <stringProp name="Argument.value">chromecrx</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prodchannel" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">prodchannel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="prodversion" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">prodversion</stringProp>
                <stringProp name="Argument.value">118.0.5993.89</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="lang" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">lang</stringProp>
                <stringProp name="Argument.value">en-US</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="acceptformat" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">acceptformat</stringProp>
                <stringProp name="Argument.value">crx3,puff</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=aknpkdffaafgjchaibgeefbgmgeghloj&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=coobgpohoikkiipiblmjeljniedjpjpf&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=fdmmgilgnpjigdojojpjoooidkmcomcm&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=gbchcmhmhahfdphkhkmpfmihenigjmpp&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=gheikhdfflhlbemfmhcfpeblehemeklp&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D0%26dr%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=ghmngbmfdgknokcefmkbjlcjabdklnlk&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=hbgcgahdbgbdenffckohanhobdcnkoip&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D0%26dr%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=honcndlokppoomehmlcokfneechailch&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=jgpocibfamiaabfcecbphfjepfgcffmg&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D0%26dr%3D512</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=lneaknkopdijkpnocmklfnjbeapigfbh&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D0%26dr%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=lplmljfembbkocngnlkkdgabpnfokmnl&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=mcbkbpnkkkipelfledbfocopglifcfmi&amp;v=0.0.0.0&amp;installedby=internal&amp;uc&amp;ping=r%3D1%26e%3D0%26dr%3D1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="x" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.name">x</stringProp>
                <stringProp name="Argument.value">id=mgndgikekgjfcpckkfioiadnlibdjbkf&amp;v=0.0.0.0&amp;installedby=internal&amp;uc</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clients2.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/service/update2/crx</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Update-AppId" elementType="Header">
                <stringProp name="Header.name">X-Goog-Update-AppId</stringProp>
                <stringProp name="Header.value">aknpkdffaafgjchaibgeefbgmgeghloj,coobgpohoikkiipiblmjeljniedjpjpf,fdmmgilgnpjigdojojpjoooidkmcomcm,gbchcmhmhahfdphkhkmpfmihenigjmpp,gheikhdfflhlbemfmhcfpeblehemeklp,ghmngbmfdgknokcefmkbjlcjabdklnlk,hbgcgahdbgbdenffckohanhobdcnkoip,honcndlokppoomehmlcokfneechailch,jgpocibfamiaabfcecbphfjepfgcffmg,lneaknkopdijkpnocmklfnjbeapigfbh,lplmljfembbkocngnlkkdgabpnfokmnl,mcbkbpnkkkipelfledbfocopglifcfmi,mgndgikekgjfcpckkfioiadnlibdjbkf</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Update-Updater" elementType="Header">
                <stringProp name="Header.name">X-Goog-Update-Updater</stringProp>
                <stringProp name="Header.value">chromecrx-118.0.5993.89</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Update-Interactivity" elementType="Header">
                <stringProp name="Header.name">X-Goog-Update-Interactivity</stringProp>
                <stringProp name="Header.value">bg</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8080</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list"/>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">Port Optimize</stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <stringProp name="ProxyControlGui.domains">deepwealth.netlify.app</stringProp>
      </ProxyControl>
      <hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Optimization" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">5</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">30</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-199" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:125331,&quot;request_elapsed_ms&quot;:683,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://beacons.gcp.gvt2.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:111377ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-197" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;QUIC&quot;,&quot;request_age_ms&quot;:1196722,&quot;request_elapsed_ms&quot;:661,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://beacons.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:126502,&quot;request_elapsed_ms&quot;:30016,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://beacons.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-198" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:155287,&quot;request_elapsed_ms&quot;:30003,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://beacons.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:124598,&quot;request_elapsed_ms&quot;:30004,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://beacons2.gvt2.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-200" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;SPDY&quot;,&quot;request_age_ms&quot;:148785,&quot;request_elapsed_ms&quot;:30191,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://www.googletagmanager.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/chrome-sync/command/?client=Google+Chrome&amp;client_id=%2BTvw2N4XfQ7Vsip4DQd9gw%3D%3D-201" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#x1f;�&#x8;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;&#x0;�X}L&#x1b;e&#x18;��&#xd;
����qY��L&#xb;,�#&#x16;�k���&#x1f;&#x19;&#x13;&apos;F&#x19;�&#x6;���&#x5cf;�&#x12;Zj۬c��,&amp;#C�L�&#x11;&#x13;�&#x5;�&#x2;3��K��&#x1b;q�&#x11;��it06��&#xb;&#x6;�G&#x10;aH2�&#x14;�����w�{yޏ�����{�&apos;���&#x1;.�	��=^/&#x17;�&#x2;��j/��s�{q�&#x1e;��i&#x13;�&#x0;&#x11;&#x1c;�&#x1;Յ��&amp;�8�&#x12;�&#x10;%J�$&#xc;uxq�[�	m�ˇ�&amp;M&#x12;�&#x19;&#x13;��k�&#x18;�&#xc;��k���&#x16;&#x7b6;uv�ߔ&#x1e;�&#x0;�����lqF�d&quot;&#xb;�&#x1;9&#xc;&gt;&#x4;X-��	�{�U�&#x6;����%&#x12;is��+@��&#x19;UJ�	YV��At=T5ژ��1��&#xc;I%�w�Y3c)�,4�Z&#x19;����&#x19;3yْ(�c��&#x6;��&#xf;q!O��j	l&#x14;�%�U9�!a�&#x4;�s,&#xd;
n�t�z�폈�S�B���#z`@r&#x10;&#x13;bC&#xd;
&#x11;�]&#x0;{O�D;&#x10;�:&#x4;����&quot;&#x16;y���&quot;ւ@�PM���)�݅k�&#xf;��(�&#x1c;��g+��c�&#xb;�ݷQ�&#x12; ���n&#x11;#�&#xf;�&#x10;�&#x7;���鈨�&#x19;&#x13;�HJ	]v7&#x11;Y&#x8;f����W&#x4;�&#x11;�.��?&#x1c;�5,�|�6��&#x1a;&#x13;�+���p�L�gT&#x6;�4J���e��Q+*&#x2;�?g�b��94�&quot;۹&#x1e;�&#x19;&#x1f;���̪�vfF1[�nY�A&#x15;�v�MT�6薅��&#x16;�&#x1e;&#x0;�&#xe;h��&#x12;�w&#x0;�su�A9&#x18;����&#x10;	&#x8;&#x7;i;�&lt;����ǻȿ�_&#x1b;6.���&#x1d;���IqQ��&#x18;�JR|R�z��U���&#x15;g�[��*��8�U��%&#xf;�Zl�&#x0;|�#-���}�����.O��G�&#xe;��׆z&#x17;����[&#x3;��a���(��iK&#x1;��(&#x1b;c&#x12;�*��&quot;?W�Ҿ9�8&#x0;��,ְ���ޒ��m�N&#x16;檊������&#xd;
�`�~&#x17;~�P��&#xf;�&#x16;~�*��@&#xb;�4*aN&#x16;kN���&#x7;�m�Nt&#xd;
c�A&#x7;��a�ԥ�$���8&quot;&#x15;ލ=&#x0;?��Ĩ&amp;]&#x7;Ǉ&#x6;����C�h�&#xe;�8:(�n�&#xe;^&#x4;�&#xe;&#xe;M�s�g�^&#x5;v�&apos;�I��X��ȑ[�);���&apos;E��&#x7f;��j&#x8;&#x1d;&lt;�.Ξ&lt;��khz2&#x1c;��v~�AY��&#x13;M��o����F&#x19;/X��h�~&#x0;&#xf;�=Fԉ�&#x7b6;���&gt;Y7��tS&#x7;؄!�1�7zO�&#x2;Yɰ����$��ܹ�qn̆M�(�&#x380;4������#�g�2�&#x10;yRW��7�&#xc;W`�X&#x19;#��F���6��&#x19;M��vR����\�&#x8;��0QhZ�aX�^���&#x16;����ґ�&#x1c;?�D�&#x5fd;מ�Ϯ�r�=&#x5f6;N�Ԥ�B�Dg�K�&#x14;��[â&#x15;�q�&#x17;&#x38d;&#x1d;&#x11;��#^�*%�����`6��Ly4�Z�l�!��2�&#xc;M�4�Ѵ�ɳ\&#x1;k�9��&#xd;
?�r8-&#x1c;�XL�1����&#x0;�s�&#x18;kܜ+�/�Q�7�L��F��&#x11;��]�&#x13;&#xc;q�:7�h�&#x1e;�?��w��G����k(�&#x1e;�X��&#x18;��l��&#x1d;%�%��&#x17;(�v&#x7f;Q�K&#x15;E��Z&#x14;&#x7;�&#x2;/2�&#x1b;9&#x11;&#x0;&#x0;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clients4.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/chrome-sync/command/?client=Google+Chrome&amp;client_id=%2BTvw2N4XfQ7Vsip4DQd9gw%3D%3D</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Encoding" elementType="Header">
                <stringProp name="Header.name">Content-Encoding</stringProp>
                <stringProp name="Header.value">gzip</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Authorization" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer ya29.a0AfB_byBJhn5c4OSA1tc5gkQJ5rPwYWKDP6WSoXLwFngXEIMTnn4YWs9qkiDNcCukFwlDE_ndvz64_2ou61RH00-YmFcmlJS1cFAD6Me2VAb5O99bun3Z6UaOxoEUDVt_MEy6B5A5uPLwjHI8DlUeepQCQ3LZjQDQrpWFnEXanx68fCKfQj0kz0_wUJJjKh88s4GiThx13tUC8Pz4lKb6u3QvZSgfn5qtm6zkadccOmds_vclL63UYfiWQNBjKav6gTNs_tqcctxyAhEaCgYKAXYSARASFQGOcNnC5V3MkR0ZNnlK6bXob9UJ_A0278</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCPOxzQEI3L3NAQiRys0BCLnKzQEI18zNAQjK0M0BCK3WzQEIqNjNAQji2s0BCLHbzQEI8dvNAQj5wNQVGPbJzQEYutLNAQ==</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/octet-stream</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Chrome WIN 118.0.5993.89 (1d05652f52a55dcf9a7905af94949f2bc3a66306-refs/branch-heads/5993@{#1298}) channel(stable)</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/toolbar/getToolbarData.json-202" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="getCalendarEvents" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">getCalendarEvents</stringProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="windowOpen" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">windowOpen</stringProp>
                <stringProp name="Argument.value">4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="_csrf" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">_csrf</stringProp>
                <stringProp name="Argument.value">495f442a-4a73-4e71-b63e-d1077416a98a</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">www.myfxbook.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/toolbar/getToolbarData.json</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://www.myfxbook.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://www.myfxbook.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="X-Requested-With" elementType="Header">
                <stringProp name="Header.name">X-Requested-With</stringProp>
                <stringProp name="Header.value">XMLHttpRequest</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-204" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;QUIC&quot;,&quot;request_age_ms&quot;:379089,&quot;request_elapsed_ms&quot;:407,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;172.217.25.202:443&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://cloudconsole-pa.clients6.google.com/&quot;,&quot;was_proxied&quot;:false},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:151499,&quot;request_elapsed_ms&quot;:30008,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://cloudconsole-pa.clients6.google.com/&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:121437,&quot;request_elapsed_ms&quot;:6962,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://cloudconsole-pa.clients6.google.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:12286ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/cable-203" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cablecar.services.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/cable</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                <stringProp name="Header.value">actioncable-v1-json, actioncable-unsupported, access-control-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpdiI6Ijg1Njg3NzVjY2FiMmVlMDdkM2M2ZTdmZDQxZGVhYWI1IiwiY29udGVudCI6ImFlYTdhY2M2M2EwMzVmYjAyMzc5MGQ1M2E0MDJjMTZjYzJhYzhhOGU0MTg5MjEwODRlYjY4ODEwMTRmZTlhZjk1YTRkOTkyZGVmNTlmM2MzODRjYmI5ZjJkNTQ2N2VmMDljMDQzOGIyNjZkM2ZiIiwiaWF0IjoxNjk3ODkzODY1LCJleHAiOjE2OTc4OTM4OTV9.2Bk7C-Ix0u39XPpbWxo3YKxK6m-7InGTJkdfoiYPDQU</stringProp>
              </elementProp>
              <elementProp name="Upgrade" elementType="Header">
                <stringProp name="Header.name">Upgrade</stringProp>
                <stringProp name="Header.value">websocket</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://app.netlify.com</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Version" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                <stringProp name="Header.value">13</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Key" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                <stringProp name="Header.value">+ivu4uNlhGnH7FnWH3df+g==</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/v1/pages/ChRDaHJvbWUvMTE4LjAuNTk5My44ORI1CVeCDxddmrdmEgUNtTstzxIFDXCsabESBQ1tcQRfEgUNOpUgTRIFDTYZzwoh44_z9J9HbWA=-205" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="alt" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">alt</stringProp>
                <stringProp name="Argument.value">proto</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">content-autofill.googleapis.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/pages/ChRDaHJvbWUvMTE4LjAuNTk5My44ORI1CVeCDxddmrdmEgUNtTstzxIFDXCsabESBQ1tcQRfEgUNOpUgTRIFDTYZzwoh44_z9J9HbWA=</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:5448ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">no-cors</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Encode-Response-If-Executable" elementType="Header">
                <stringProp name="Header.name">X-Goog-Encode-Response-If-Executable</stringProp>
                <stringProp name="Header.value">base64</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">none</stringProp>
              </elementProp>
              <elementProp name="X-Goog-Api-Key" elementType="Header">
                <stringProp name="Header.name">X-Goog-Api-Key</stringProp>
                <stringProp name="Header.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCPOxzQEI3L3NAQiRys0BCLnKzQEI18zNAQjK0M0BCK3WzQEIqNjNAQji2s0BCLHbzQEI8dvNAQj5wNQVGPbJzQEYutLNAQ==</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/cable-206" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cablecar.services.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/cable</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                <stringProp name="Header.value">actioncable-v1-json, actioncable-unsupported, access-control-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpdiI6Ijg1Njg3NzVjY2FiMmVlMDdkM2M2ZTdmZDQxZGVhYWI1IiwiY29udGVudCI6ImFlYTdhY2M2M2EwMzVmYjAyMzc5MGQ1M2E0MDJjMTZjYzJhYzhhOGU0MTg5MjEwODRlYjY4ODEwMTRmZTlhZjk1YTRkOTkyZGVmNTlmM2MzODRjYmI5ZjJkNTQ2N2VmMDljMDQzOGIyNjZkM2ZiIiwiaWF0IjoxNjk3ODkzODY1LCJleHAiOjE2OTc4OTM4OTV9.2Bk7C-Ix0u39XPpbWxo3YKxK6m-7InGTJkdfoiYPDQU</stringProp>
              </elementProp>
              <elementProp name="Upgrade" elementType="Header">
                <stringProp name="Header.name">Upgrade</stringProp>
                <stringProp name="Header.value">websocket</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://app.netlify.com</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Version" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                <stringProp name="Header.value">13</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Key" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                <stringProp name="Header.value">m9+jSKgMuIlrnUdpYPVZ0A==</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-207" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:181648,&quot;request_elapsed_ms&quot;:514,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://accounts.google.com/&quot;,&quot;was_proxied&quot;:true},{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTPS&quot;,&quot;request_age_ms&quot;:143290,&quot;request_elapsed_ms&quot;:354,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;[::1]:8080&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://accounts.google.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:6135ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-208" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:186011,&quot;request_elapsed_ms&quot;:5525,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://ssl.gstatic.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">clients2.google.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/access-control/bb-api/api/v1/sites/3c204353-7b9d-4b17-b43e-763a8e269048/deploys-209" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="per_page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">per_page</stringProp>
                <stringProp name="Argument.value">15</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="state" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">state</stringProp>
                <stringProp name="Argument.value">pending_review</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">app.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/access-control/bb-api/api/v1/sites/3c204353-7b9d-4b17-b43e-763a8e269048/deploys</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://app.netlify.com/sites/deepwealth/deploys</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/access-control/bb-api/api/v1/sites/3c204353-7b9d-4b17-b43e-763a8e269048/deploys-211" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">page</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="per_page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">per_page</stringProp>
                <stringProp name="Argument.value">15</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">app.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/access-control/bb-api/api/v1/sites/3c204353-7b9d-4b17-b43e-763a8e269048/deploys</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://app.netlify.com/sites/deepwealth/deploys</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/access-control/bb-api/api/v1/sites/deepwealth.netlify.app-210" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">app.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/access-control/bb-api/api/v1/sites/deepwealth.netlify.app</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://app.netlify.com/sites/deepwealth/deploys</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/portfolio/optimize-212" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">portfolio-sim-api-gateway-06-7a2g0l5t.an.gateway.dev</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/portfolio/optimize</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">2000</stringProp>
            <stringProp name="TestPlan.comments">Recorded:13479ms</stringProp>
          </ConstantTimer>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">content-type,x-api-key</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-214" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:303276,&quot;request_elapsed_ms&quot;:30010,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://adservice.google.com/&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;QUIC&quot;,&quot;request_age_ms&quot;:303250,&quot;request_elapsed_ms&quot;:30253,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://ogs.google.com/&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_TIMED_OUT&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:31326,&quot;request_elapsed_ms&quot;:30029,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;tcp.connection.timed_out&quot;,&quot;url&quot;:&quot;https://google.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/domainreliability/upload-215" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;&quot;,&quot;request_age_ms&quot;:182035,&quot;request_elapsed_ms&quot;:6000,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://googleads.g.doubleclick.net/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">beacons.gvt2.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/staticsb/statics/latest/traffic/Notification/desktop/svg/RoadHazard.svg-216" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">assets.msn.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/staticsb/statics/latest/traffic/Notification/desktop/svg/RoadHazard.svg</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="UA-CPU" elementType="Header">
                <stringProp name="Header.name">UA-CPU</stringProp>
                <stringProp name="Header.value">AMD64</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64; Trident/7.0; rv:11.0) like Gecko</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/v1/events-218" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">events.devcycle.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/events</stringProp>
          <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://app.netlify.com/sites/deepwealth/deploys</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://app.netlify.com</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Method" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                <stringProp name="Header.value">POST</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="Access-Control-Request-Headers" elementType="Header">
                <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                <stringProp name="Header.value">authorization,content-type</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/portfolio/optimize" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;id&quot;:1,&quot;device_width&quot;:412,&quot;is_mobile&quot;:true,&quot;description&quot;:&quot;xxx&quot;,&quot;init_investment&quot;:${capital},&quot;optimize_type&quot;:&quot;portfolio&quot;,&quot;assets&quot;:{&quot;signal&quot;:&quot;3&quot;,&quot;magic&quot;:&quot;555&quot;,&quot;symbol&quot;:&quot;EURUSD&quot;,&quot;size&quot;:&quot;0.01&quot;,&quot;bot&quot;:&quot;EUR_USD_H3_RL_L&quot;},&quot;portfolios&quot;:[{&quot;id&quot;:1,&quot;name&quot;:&quot;Master No.1&quot;,&quot;preset_name&quot;:null,&quot;market&quot;:&quot;FX&quot;,&quot;asset_class&quot;:&quot;Multi Asset&quot;,&quot;asset&quot;:&quot;Currency&quot;,&quot;status&quot;:&quot;Active&quot;,&quot;risk&quot;:&quot;Medium&quot;,&quot;character&quot;:null,&quot;equity&quot;:&quot;{\r\n\t\&quot;table\&quot;: \&quot;-\&quot;,\r\n\t\&quot;rows\&quot;:\r\n\t[\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-10\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 31.23999999999999\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-11\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 175.78000000000003\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-12\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 167.20000000000005\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-8\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -10.17\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-9\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 3.53\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-1\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 99.35000000000001\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-2\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 16.250000000000004\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-3\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 42.820000000000014\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-4\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 61.59000000000004\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-5\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -7.280000000000025\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-6\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 81.20999999999997\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-7\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -4.769999999999998\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-8\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 5.179999999999996\r\n\t\t}\r\n\t]\r\n}&quot;,&quot;weight&quot;:${w1},&quot;report&quot;:null,&quot;pnl&quot;:null,&quot;max_dd&quot;:16.27,&quot;winrate&quot;:null,&quot;cagr&quot;:null,&quot;rsquare&quot;:null,&quot;description&quot;:&quot;Multi-assets using Reinforcement Learning (Medium Risk Type)&quot;,&quot;min_invest&quot;:10,&quot;current_equity&quot;:1160.77,&quot;percent_return&quot;:41.77,&quot;sharp_ratio&quot;:3.14,&quot;myfxbook_link&quot;:&quot;https://www.myfxbook.com/members/DO_Project/master-no1/10076993&quot;,&quot;myfxgraph&quot;:&quot;&lt;a target=\&quot;_blank\&quot; href=\&quot;https://www.myfxbook.com/members/DO_Project/master-no1/10076993\&quot;&gt;&lt;img alt=\&quot;widget\&quot; width=\&quot;100%\&quot; src=\&quot;https://widgets.myfxbook.com/custom-widget?id=10076993&amp;width=400&amp;height=250&amp;bart=0&amp;linet=0&amp;symbol=AUDCAD&amp;magic=-1&amp;title=MASTER NO.1&amp;titles=12&amp;bgColor=08122e&amp;gridColor=bdbdbd&amp;lineColor=00cb05&amp;barColor=82ff85&amp;bar1Color=82ff85&amp;fontColor=ffffff&amp;chartbgc=08122e&amp;equityColor=eff45a\&quot;/&gt;&lt;/a&gt;&quot;,&quot;logo&quot;:&quot;/media/logos/LOGO_DEEPOCEAN-02_125x125.png&quot;,&quot;run_period&quot;:&quot;These stat are from Mar 14,2023 to Oct 20,2023 (last 7 months)&quot;,&quot;portfolio_link&quot;:&quot;https://social-trading.exness.com/strategy/11883761&quot;,&quot;account_no&quot;:&quot;10076993&quot;,&quot;myfxbook_widget_info&quot;:null,&quot;myfxbook_first_trade&quot;:&quot;03/14/2023 00:00&quot;,&quot;myfxbook_last_update&quot;:&quot;10/20/2023 12:59&quot;},{&quot;id&quot;:2,&quot;name&quot;:&quot;Master No.2      &quot;,&quot;preset_name&quot;:null,&quot;market&quot;:&quot;FX&quot;,&quot;asset_class&quot;:&quot;GBPUSD&quot;,&quot;asset&quot;:&quot;Currency&quot;,&quot;status&quot;:&quot;Active&quot;,&quot;risk&quot;:&quot;Medium&quot;,&quot;character&quot;:null,&quot;equity&quot;:&quot;{\r\n\t\&quot;table\&quot;: \&quot;-\&quot;,\r\n\t\&quot;rows\&quot;:\r\n\t[\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-11\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 33.88\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-12\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 77.68\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-1\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 91.63\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-2\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -0.5600000000000012\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-3\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -9.350000000000001\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-4\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 3.599999999999993\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-5\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 43.40999999999998\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-6\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 25.32\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-7\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 18.599999999999998\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-8\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 50.849999999999994\r\n\t\t}\r\n\t]\r\n}&quot;,&quot;weight&quot;:${w2},&quot;report&quot;:null,&quot;pnl&quot;:null,&quot;max_dd&quot;:17.96,&quot;winrate&quot;:null,&quot;cagr&quot;:null,&quot;rsquare&quot;:null,&quot;description&quot;:&quot;Trade Asset GBP/USD using Reinforcement Learning (Medium Risk Type)&quot;,&quot;min_invest&quot;:10,&quot;current_equity&quot;:1075.99,&quot;percent_return&quot;:104.43,&quot;sharp_ratio&quot;:2.15,&quot;myfxbook_link&quot;:&quot;https://www.myfxbook.com/members/DO_Project/master-no2/10219590&quot;,&quot;myfxgraph&quot;:&quot;&lt;a target=\&quot;_blank\&quot; href=\&quot;https://www.myfxbook.com/members/DO_Project/master-no2/10219590\&quot;&gt;&lt;img alt=\&quot;widget\&quot; width = \&quot;100%\&quot; src=\&quot;https://widgets.myfxbook.com/custom-widget?id=10219590&amp;width=400&amp;height=250&amp;bart=0&amp;linet=0&amp;symbol=AUDCAD&amp;magic=-1&amp;title=MASTERNO.2&amp;titles=12&amp;bgColor=08122e&amp;gridColor=bdbdbd&amp;lineColor=00cb05&amp;barColor=82ff85&amp;bar1Color=82ff85&amp;fontColor=ffffff&amp;chartbgc=08122e&amp;equityColor=eff45a\&quot;/&gt;&lt;/a&gt;&quot;,&quot;logo&quot;:&quot;/media/logos/LOGO_DEEPOCEAN-02_125x125.png&quot;,&quot;run_period&quot;:&quot;These stat are from Jun 09,2023 to Oct 20,2023 (last 4 months)&quot;,&quot;portfolio_link&quot;:&quot;https://social-trading.exness.com/strategy/11936106&quot;,&quot;account_no&quot;:&quot;10219590&quot;,&quot;myfxbook_widget_info&quot;:null,&quot;myfxbook_first_trade&quot;:&quot;06/09/2023 00:00&quot;,&quot;myfxbook_last_update&quot;:&quot;10/20/2023 12:29&quot;},{&quot;id&quot;:4,&quot;name&quot;:&quot;Moderate Ocean&quot;,&quot;preset_name&quot;:null,&quot;market&quot;:&quot;FX&quot;,&quot;asset_class&quot;:&quot;Multi Asset&quot;,&quot;asset&quot;:&quot;Currency&quot;,&quot;status&quot;:&quot;Active&quot;,&quot;risk&quot;:&quot;Medium&quot;,&quot;character&quot;:null,&quot;equity&quot;:&quot;{\r\n\t\&quot;table\&quot;: \&quot;-\&quot;,\r\n\t\&quot;rows\&quot;:\r\n\t[\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-10\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 31.23999999999999\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-11\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 175.78000000000003\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-12\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 167.20000000000005\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-8\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -10.17\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-9\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 3.53\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-1\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 99.35000000000001\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-2\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 16.250000000000004\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-3\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 42.820000000000014\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-4\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 61.59000000000004\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-5\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -7.280000000000025\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-6\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 81.20999999999997\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-7\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -4.769999999999998\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-8\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 5.179999999999996\r\n\t\t}\r\n\t]\r\n}&quot;,&quot;weight&quot;:${w3},&quot;report&quot;:null,&quot;pnl&quot;:null,&quot;max_dd&quot;:3.79,&quot;winrate&quot;:null,&quot;cagr&quot;:null,&quot;rsquare&quot;:null,&quot;description&quot;:&quot;Multi-assets using AI and Asset Allocation (Low Risk Type, Moderate Theme)&quot;,&quot;min_invest&quot;:10,&quot;current_equity&quot;:986.19,&quot;percent_return&quot;:-2.08,&quot;sharp_ratio&quot;:1.5,&quot;myfxbook_link&quot;:&quot;https://www.myfxbook.com/members/DO_Project/moderate-ocean-1--exness/10396872&quot;,&quot;myfxgraph&quot;:&quot;&lt;a target=\&quot;_blank\&quot; href=\&quot;https://www.myfxbook.com/members/DO_Project/moderate-ocean-1--exness/10396872\&quot;&gt;&lt;img alt=\&quot;widget\&quot; width = \&quot;100%\&quot; src=\&quot;https://widgets.myfxbook.com/custom-widget?id=10396872&amp;width=400&amp;height=250&amp;bart=0&amp;linet=0&amp;symbol=AUDCAD&amp;magic=-1&amp;title=ModerateOcean1&amp;titles=12&amp;bgColor=08122e&amp;gridColor=bdbdbd&amp;lineColor=00cb05&amp;barColor=82ff85&amp;bar1Color=82ff85&amp;fontColor=ffffff&amp;chartbgc=08122e&amp;equityColor=eff45a\&quot;/&gt;&lt;/a&gt;&quot;,&quot;logo&quot;:&quot;/media/logos/LOGO_DEEPOCEAN-02_125x125.png&quot;,&quot;run_period&quot;:&quot;These stat are from Sep 07,2023 to Oct 20,2023 (last 1 months)&quot;,&quot;portfolio_link&quot;:&quot;https://social-trading.exness.com/strategy/110012503&quot;,&quot;account_no&quot;:&quot;10396872&quot;,&quot;myfxbook_widget_info&quot;:null,&quot;myfxbook_first_trade&quot;:&quot;09/07/2023 00:00&quot;,&quot;myfxbook_last_update&quot;:&quot;10/20/2023 12:18&quot;},{&quot;id&quot;:5,&quot;name&quot;:&quot;Aggessive Ocean&quot;,&quot;preset_name&quot;:null,&quot;market&quot;:&quot;FX&quot;,&quot;asset_class&quot;:&quot;Multi Asset&quot;,&quot;asset&quot;:&quot;Currency&quot;,&quot;status&quot;:&quot;Active&quot;,&quot;risk&quot;:&quot;High&quot;,&quot;character&quot;:null,&quot;equity&quot;:&quot;{\r\n\t\&quot;table\&quot;: \&quot;-\&quot;,\r\n\t\&quot;rows\&quot;:\r\n\t[\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-10\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 31.23999999999999\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-11\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 175.78000000000003\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-12\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 167.20000000000005\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-8\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -10.17\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2022-9\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 3.53\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-1\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 99.35000000000001\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-2\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 16.250000000000004\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-3\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 42.820000000000014\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-4\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 61.59000000000004\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-5\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -7.280000000000025\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-6\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 81.20999999999997\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-7\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: -4.769999999999998\r\n\t\t},\r\n\t\t{\r\n\t\t\t\&quot;exit_month\&quot;: \&quot;2023-8\&quot;,\r\n\t\t\t\&quot;pnl\&quot;: 5.179999999999996\r\n\t\t}\r\n\t]\r\n}&quot;,&quot;weight&quot;:${w4},&quot;report&quot;:null,&quot;pnl&quot;:null,&quot;max_dd&quot;:5.73,&quot;winrate&quot;:null,&quot;cagr&quot;:null,&quot;rsquare&quot;:null,&quot;description&quot;:&quot;Multi-assets using AI and Asset Allocation (High Risk Type, Aggressive Theme)&quot;,&quot;min_invest&quot;:10,&quot;current_equity&quot;:1031.34,&quot;percent_return&quot;:2.53,&quot;sharp_ratio&quot;:1.89,&quot;myfxbook_link&quot;:&quot;https://www.myfxbook.com/members/DO_Project/aggressive-ocean-1--exness/10396855&quot;,&quot;myfxgraph&quot;:&quot;&lt;a target=\&quot;_blank\&quot; href=\&quot;https://www.myfxbook.com/members/DO_Project/aggressive-ocean-1--exness/10396855\&quot;&gt;&lt;img alt=\&quot;widget\&quot; width = \&quot;100%\&quot; src=\&quot;https://widgets.myfxbook.com/custom-widget?id=10396855&amp;width=400&amp;height=250&amp;bart=0&amp;linet=0&amp;symbol=AUDCAD&amp;magic=-1&amp;title=AggressiveOcean1&amp;titles=12&amp;bgColor=08122e&amp;gridColor=bdbdbd&amp;lineColor=00cb05&amp;barColor=82ff85&amp;bar1Color=82ff85&amp;fontColor=ffffff&amp;chartbgc=08122e&amp;equityColor=eff45a\&quot;/&gt;&lt;/a&gt;&quot;,&quot;logo&quot;:&quot;/media/logos/LOGO_DEEPOCEAN-02_125x125.png&quot;,&quot;run_period&quot;:&quot;These stat are from Sep 07,2023 to Oct 20,2023 (last 1 months)&quot;,&quot;portfolio_link&quot;:&quot;https://social-trading.exness.com/strategy/110012499&quot;,&quot;account_no&quot;:&quot;10396855&quot;,&quot;myfxbook_widget_info&quot;:null,&quot;myfxbook_first_trade&quot;:&quot;09/07/2023 00:00&quot;,&quot;myfxbook_last_update&quot;:&quot;10/20/2023 12:10&quot;}]}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">portfolio-sim-api-gateway-06-7a2g0l5t.an.gateway.dev</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/portfolio/optimize</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="x-api-key" elementType="Header">
                <stringProp name="Header.name">x-api-key</stringProp>
                <stringProp name="Header.value">AIzaSyCBHaJOMq-lDRYBnbvB4IoW3n8mE33HtlE</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/s/poppins/v20/pxiByp8kv8JHgFVrLCz7Z1xlFQ.woff2-220" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">fonts.gstatic.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/s/poppins/v20/pxiByp8kv8JHgFVrLCz7Z1xlFQ.woff2</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://fonts.googleapis.com/</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://deepwealth.netlify.app</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">*/*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?1</stringProp>
              </elementProp>
              <elementProp name="X-Client-Data" elementType="Header">
                <stringProp name="Header.name">X-Client-Data</stringProp>
                <stringProp name="Header.value">CIa2yQEIo7bJAQipncoBCKGVywEIkqHLAQiFoM0BCLnKzQEI8dvNARj2yc0B</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Android&quot;</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Linux; Android 10; SM-G981B) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.162 Mobile Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">font</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/v1/events-219" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;events&quot;:[{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;project_golduck_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166106,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:true,&quot;type&quot;:&quot;Boolean&quot;,&quot;_variable&quot;:&quot;64499ba640e1f51aae3a67a6&quot;}},{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;project_libaniferous_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166108,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:false,&quot;type&quot;:&quot;Boolean&quot;,&quot;_variable&quot;:&quot;64e627d171be58715da39eaf&quot;}},{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;project_exeggcute_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166109,&quot;value&quot;:8,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:true,&quot;type&quot;:&quot;Boolean&quot;,&quot;_variable&quot;:&quot;64499bb340e1f51aae3a694a&quot;}},{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;project_doduo_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166129,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:false,&quot;type&quot;:&quot;Boolean&quot;,&quot;_variable&quot;:&quot;64499ae6f347df8289ea3655&quot;}},{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;project_salamence_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166129,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:true,&quot;type&quot;:&quot;Boolean&quot;,&quot;_variable&quot;:&quot;64d3ba65ba777bfceb6a3b81&quot;}},{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;project_evolution_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166135,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:&quot;off&quot;,&quot;type&quot;:&quot;String&quot;,&quot;_variable&quot;:&quot;64013a35df24af0fb4e225c8&quot;}},{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;project_lucario_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166157,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:true,&quot;type&quot;:&quot;Boolean&quot;,&quot;_variable&quot;:&quot;64499bac40e1f51aae3a687e&quot;}},{&quot;type&quot;:&quot;variableEvaluated&quot;,&quot;target&quot;:&quot;ops_advanced_deploy_filtering_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166158,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:true,&quot;type&quot;:&quot;Boolean&quot;,&quot;_variable&quot;:&quot;64c0dae4b4070bce27b4d68b&quot;}},{&quot;type&quot;:&quot;variableDefaulted&quot;,&quot;target&quot;:&quot;project_trumbeak_ui&quot;,&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;clientDate&quot;:1697894166108,&quot;value&quot;:4,&quot;featureVars&quot;:{&quot;64013a34df24af0fb4e225c6&quot;:&quot;64013a35df24af0fb4e225cd&quot;,&quot;6409cccd8aa0df5ac968c997&quot;:&quot;6409cccd8aa0df5ac968c99d&quot;,&quot;64499ae0f347df8289ea35f0&quot;:&quot;64499ae0f347df8289ea35f5&quot;,&quot;64499ae33eec8dcb3153733b&quot;:&quot;64499ae33eec8dcb31537340&quot;,&quot;64499ae6f347df8289ea3652&quot;:&quot;64499ae6f347df8289ea3658&quot;,&quot;64499aea3eec8dcb315373a6&quot;:&quot;64499aea3eec8dcb315373ac&quot;,&quot;64499aedf347df8289ea36b3&quot;:&quot;64499aedf347df8289ea36b8&quot;,&quot;64499af13eec8dcb315373fe&quot;:&quot;64499af13eec8dcb31537403&quot;,&quot;64499af4f347df8289ea371a&quot;:&quot;64499af4f347df8289ea371f&quot;,&quot;64499af73eec8dcb31537468&quot;:&quot;64499af73eec8dcb3153746e&quot;,&quot;64499b08f347df8289ea384e&quot;:&quot;64499b08f347df8289ea3853&quot;,&quot;64499b15f347df8289ea390d&quot;:&quot;64499b15f347df8289ea3912&quot;,&quot;64499b193eec8dcb31537649&quot;:&quot;64499b193eec8dcb3153764e&quot;,&quot;64499b1cf347df8289ea3965&quot;:&quot;64499b1cf347df8289ea396a&quot;,&quot;64499b20f347df8289ea39a3&quot;:&quot;64499b20f347df8289ea39a8&quot;,&quot;64499b23f347df8289ea39ea&quot;:&quot;64499b23f347df8289ea39ef&quot;,&quot;64499b2af347df8289ea3a78&quot;:&quot;64499b2af347df8289ea3a7d&quot;,&quot;64499b2df347df8289ea3ab6&quot;:&quot;64499b2df347df8289ea3abb&quot;,&quot;64499b30f347df8289ea3af4&quot;:&quot;64499b30f347df8289ea3af9&quot;,&quot;64499b34f347df8289ea3b46&quot;:&quot;64499b34f347df8289ea3b4c&quot;,&quot;64499b6640e1f51aae3a5ffb&quot;:&quot;64499b6640e1f51aae3a6000&quot;,&quot;64499b6a40e1f51aae3a6074&quot;:&quot;64499b6a40e1f51aae3a6079&quot;,&quot;64499b8840e1f51aae3a63db&quot;:&quot;64499b8840e1f51aae3a63e1&quot;,&quot;64499b9640e1f51aae3a656b&quot;:&quot;64499b9640e1f51aae3a6570&quot;,&quot;64499b9940e1f51aae3a65d0&quot;:&quot;64499b9940e1f51aae3a65d5&quot;,&quot;64499b9f40e1f51aae3a66d4&quot;:&quot;64499b9f40e1f51aae3a66da&quot;,&quot;64499ba640e1f51aae3a67a3&quot;:&quot;64499ba640e1f51aae3a67a8&quot;,&quot;64499bac40e1f51aae3a687b&quot;:&quot;64499bad40e1f51aae3a6880&quot;,&quot;64499bb040e1f51aae3a68e4&quot;:&quot;64499bb040e1f51aae3a68e9&quot;,&quot;64499bb340e1f51aae3a6947&quot;:&quot;64499bb340e1f51aae3a694c&quot;,&quot;64499bbd40e1f51aae3a6a5c&quot;:&quot;64499bbd40e1f51aae3a6a61&quot;,&quot;64499bc840e1f51aae3a6b93&quot;:&quot;64499bc840e1f51aae3a6b98&quot;,&quot;64499bce40e1f51aae3a6c47&quot;:&quot;64499bce40e1f51aae3a6c4c&quot;,&quot;64499c7040e1f51aae3a6d6f&quot;:&quot;64499c7040e1f51aae3a6d74&quot;,&quot;645bdb8c6fcd0f2c4c154aec&quot;:&quot;645bdb8c6fcd0f2c4c154af1&quot;,&quot;64762c23f3f31482d192e311&quot;:&quot;64762c23f3f31482d192e316&quot;,&quot;64898a821882df921856539b&quot;:&quot;64ef0a424a5b60b67d626497&quot;,&quot;6495d4ae6a6b80413a84c618&quot;:&quot;6495d4ae6a6b80413a84c61d&quot;,&quot;649de328f4a75de273f66ec2&quot;:&quot;649de328f4a75de273f66ec7&quot;,&quot;64a805b6489b4856b1312644&quot;:&quot;64a805b6489b4856b1312649&quot;,&quot;64a8124225d7ac1f7e109e99&quot;:&quot;64a8124225d7ac1f7e109e9e&quot;,&quot;64b050e255c25198a5b8106b&quot;:&quot;64b050e255c25198a5b81071&quot;,&quot;64b52811eb639341da5ebfaf&quot;:&quot;64b52811eb639341da5ebfb4&quot;,&quot;64b85f7739dcc8bb56512187&quot;:&quot;64b85f7739dcc8bb5651218c&quot;,&quot;64c0dae4b4070bce27b4d688&quot;:&quot;64c0dae4b4070bce27b4d68d&quot;,&quot;64d3ba65ba777bfceb6a3b7e&quot;:&quot;64d3ba65ba777bfceb6a3b83&quot;,&quot;64ddde24f565083dbffa2c8e&quot;:&quot;64ddde24f565083dbffa2c93&quot;,&quot;64e33016c655e4d9c9a210ab&quot;:&quot;64e33016c655e4d9c9a210b0&quot;,&quot;64e51ffb9204350b8bcb9e2a&quot;:&quot;64e51ffb9204350b8bcb9e2f&quot;,&quot;64e627d171be58715da39eac&quot;:&quot;64e627d171be58715da39eb2&quot;,&quot;64e642106135d39e1c47ebb7&quot;:&quot;64e642106135d39e1c47ebbc&quot;,&quot;64e88cde4af5447ccd898eac&quot;:&quot;64e88cde4af5447ccd898eb1&quot;,&quot;64f1b2a9acdbbc1e211a045e&quot;:&quot;64f1b2a9acdbbc1e211a0463&quot;,&quot;64f5eea01796702e4ca48ba8&quot;:&quot;64f5eea01796702e4ca48bad&quot;,&quot;64f74efed332dc67891eb31e&quot;:&quot;64f74efed332dc67891eb323&quot;,&quot;64f775e9d332dc678921bd9c&quot;:&quot;64f775e9d332dc678921bda1&quot;,&quot;64feea48368c7c2ffcd9709d&quot;:&quot;64feea48368c7c2ffcd970a2&quot;,&quot;6501d8b3c0396cf55bca8742&quot;:&quot;6501d8b3c0396cf55bca8746&quot;,&quot;65046a3fd36873c1d1047ca9&quot;:&quot;65046a3fd36873c1d1047caf&quot;,&quot;6511caf070b841e70ae01286&quot;:&quot;6511caf070b841e70ae0128b&quot;,&quot;6512b519f7c55464d86d0353&quot;:&quot;6512b519f7c55464d86d035a&quot;,&quot;65133de0f7c55464d87cb2e3&quot;:&quot;65133de0f7c55464d87cb2ea&quot;,&quot;651c16c2d7ab2c3a712361a8&quot;:&quot;651c16c2d7ab2c3a712361af&quot;,&quot;652fbd75b22a7dc55c8dad8a&quot;:&quot;652fbd75b22a7dc55c8dad92&quot;},&quot;metaData&quot;:{&quot;value&quot;:false,&quot;type&quot;:&quot;Boolean&quot;}}],&quot;user&quot;:{&quot;user_id&quot;:&quot;61c6fd931a1060ca6db6ed7a&quot;,&quot;isAnonymous&quot;:false,&quot;email&quot;:&quot;pomprawit@hotmail.com&quot;,&quot;customData&quot;:{&quot;user_created_at&quot;:1640430995459,&quot;current_account_id&quot;:&quot;61c6fd931a1060ca6db6ed7b&quot;,&quot;current_plan_type&quot;:&quot;starter&quot;,&quot;current_account_created_date&quot;:1640430995475},&quot;lastSeenDate&quot;:&quot;2023-10-21T13:11:05.247Z&quot;,&quot;createdDate&quot;:&quot;2023-10-21T13:11:05.247Z&quot;,&quot;platform&quot;:&quot;web&quot;,&quot;platformVersion&quot;:&quot;Chrome 118.0.0.0&quot;,&quot;deviceModel&quot;:&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36&quot;,&quot;sdkType&quot;:&quot;client&quot;,&quot;sdkVersion&quot;:&quot;1.13.10&quot;}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">events.devcycle.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/v1/events</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://app.netlify.com/sites/deepwealth/deploys</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">cross-site</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://app.netlify.com</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua</stringProp>
                <stringProp name="Header.value">&quot;Chromium&quot;;v=&quot;118&quot;, &quot;Google Chrome&quot;;v=&quot;118&quot;, &quot;Not=A?Brand&quot;;v=&quot;99&quot;</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-mobile" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                <stringProp name="Header.value">?0</stringProp>
              </elementProp>
              <elementProp name="sec-ch-ua-platform" elementType="Header">
                <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Port Optimize/cable-217" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">cablecar.services.netlify.com</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/cable</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-WebSocket-Protocol" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Protocol</stringProp>
                <stringProp name="Header.value">actioncable-v1-json, actioncable-unsupported, access-control-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpdiI6Ijg1Njg3NzVjY2FiMmVlMDdkM2M2ZTdmZDQxZGVhYWI1IiwiY29udGVudCI6ImFlYTdhY2M2M2EwMzVmYjAyMzc5MGQ1M2E0MDJjMTZjYzJhYzhhOGU0MTg5MjEwODRlYjY4ODEwMTRmZTlhZjk1YTRkOTkyZGVmNTlmM2MzODRjYmI5ZjJkNTQ2N2VmMDljMDQzOGIyNjZkM2ZiIiwiaWF0IjoxNjk3ODkzODY1LCJleHAiOjE2OTc4OTM4OTV9.2Bk7C-Ix0u39XPpbWxo3YKxK6m-7InGTJkdfoiYPDQU</stringProp>
              </elementProp>
              <elementProp name="Upgrade" elementType="Header">
                <stringProp name="Header.name">Upgrade</stringProp>
                <stringProp name="Header.value">websocket</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.9,th;q=0.8</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Extensions" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Extensions</stringProp>
                <stringProp name="Header.value">permessage-deflate; client_max_window_bits</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://app.netlify.com</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Version" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Version</stringProp>
                <stringProp name="Header.value">13</stringProp>
              </elementProp>
              <elementProp name="Pragma" elementType="Header">
                <stringProp name="Header.name">Pragma</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Sec-WebSocket-Key" elementType="Header">
                <stringProp name="Header.name">Sec-WebSocket-Key</stringProp>
                <stringProp name="Header.value">6L+zJBm8Ixr/Kk7TsFJPDQ==</stringProp>
              </elementProp>
              <elementProp name="Cache-Control" elementType="Header">
                <stringProp name="Header.name">Cache-Control</stringProp>
                <stringProp name="Header.value">no-cache</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/118.0.0.0 Safari/537.36</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">D:/Projects/do-portolio-opt-web/tests/portfolio_sim_test_data.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">true</boolProp>
        <stringProp name="variableNames">w1,w2,w3,w4,capital</stringProp>
      </CSVDataSet>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
